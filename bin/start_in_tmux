#!/usr/bin/env bash

usage() {
    echo "Usage: start_in_tmux SESSION_NAME [command1 [args] -- command2 [args] -- ...]"
    echo
    echo "Starts each command between -- in its own tmux window inside the named session."
    echo
    echo "Example:"
    echo "  $0 IoTempower mqtt_broker scanif -- web_starter"
    echo "Starts:"
    echo "  'mqtt_broker scanif' in one window, and 'web_starter' in another window."
    exit 1
}

if [[ $# -eq 0 ]] || [[ "$1" == "--help" ]] || [[ "$1" == "help" ]]; then
    usage
fi

SESSION="$1"
shift

if [[ $# -eq 0 ]]; then
    usage
fi

# Verbose: Show which session will be started
echo "Starting tmux session: '$SESSION'"
tmux kill-session -t "$SESSION" 2>/dev/null

declare -a CMD_LIST=()
declare -a CURRENT_CMD=()

for arg in "$@"; do
    if [[ "$arg" == "--" ]]; then
        if [ ${#CURRENT_CMD[@]} -gt 0 ]; then
            CMD_LIST+=("$(printf "%q " "${CURRENT_CMD[@]}")")
            CURRENT_CMD=()
        fi
    else
        CURRENT_CMD+=("$arg")
    fi
done
if [ ${#CURRENT_CMD[@]} -gt 0 ]; then
    CMD_LIST+=("$(printf "%q " "${CURRENT_CMD[@]}")")
fi

for idx in "${!CMD_LIST[@]}"; do
    CMD="${CMD_LIST[$idx]}"
    WINDOW_NAME="svc$((idx+1))"
    if [[ $idx -eq 0 ]]; then
        echo " - Creating session '$SESSION', window '$WINDOW_NAME', running: $CMD"
        tmux new-session -d -s "$SESSION" -- bash -c "$CMD; echo session terminated; read"
        tmux rename-window -t "$SESSION:0" "$WINDOW_NAME"
    else
        echo " - Creating window '$WINDOW_NAME' in session '$SESSION', running: $CMD"
        tmux new-window -t "$SESSION" -n "$WINDOW_NAME" -- bash -c "$CMD; echo session terminated; read"
    fi
done

# Uncomment to auto-attach in interactive use:
# tmux attach-session -t "$SESSION"

echo "All services started in tmux session '$SESSION'."
echo "You can see them via typing the following: tmux attach"
exit 0
